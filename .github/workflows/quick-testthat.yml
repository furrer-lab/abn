# See https://github.com/r-lib/actions/tree/master/examples#readme for
# example workflows available for the R community.

name: Quick build and test

on:
  push:
    branches:
      - "**"           # include all branches
      - "!main"        # then exclude only
      - "!master"      # those two
      - "!**noT**"     # exclude all branches containing noT in their name
  pull_request:
    branches-ignore:   # do not run on pull
      - main           # requests on default
      - master

env:
  BUILD_LOC: "./build"

permissions:
  contents: read
  packages: read

jobs:
  get-target-container:
    runs-on: ubuntu-22.04
    outputs:
      CONTAINER: ${{ steps.container.outputs.container }}

    steps:
      - name: Get container
        id: container
        env:
          BRANCH: ${{ github.ref_name }}
        run: |
          if [[ $BRANCH == *"__"* ]]; then
            echo "container=${BRANCH##*__}" >> $GITHUB_OUTPUT
          else
            echo "container=debian/clang/devel" >> $GITHUB_OUTPUT
          fi

  build-install-test:
    if: ${{ github.event_name != 'pull_request' && !startsWith(github.event.head_commit.message, 'noT') }}
    needs: [get-target-container]
    runs-on: ubuntu-22.04
    # name: Testing ${{ matrix.os }} (${{ matrix.compiler}}-${{ matrix.r-version }})
    name: Testing in  ${{ needs.get-target-container.outputs.CONTAINER }}
    # runs-on: ubuntu-latest
    container:
      image: ${{ vars.CONTAINER_SOURCE }}/${{ needs.get-target-container.outputs.CONTAINER }}/abn:${{ vars.CONTAINER_VERSION || 'latest' }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    env:
      R_KEEP_PKG_SOURCE: yes  # NOTE Jo: not sure why this is here?
    steps:
      - uses: actions/checkout@v4
      - name: Create build location
        run: |
            mkdir ${{ env.BUILD_LOC }}
        shell: bash
      - name: Disable renv
        run: |
            renv::deactivate()
        shell: Rscript {0}
      - name: Change permissions of configure
        run: |
            chmod +x configure
        shell: bash
      - name: Install package dependencies
        run: |
            devtools::install_deps(pkg = '.', dependencies = TRUE, upgrade='never')
        shell: Rscript {0}
      - name: Build the package
        run: |
            devtools::build(pkg = '.', path = '${{ env.BUILD_LOC }}/abn.tar.gz')
        shell: Rscript {0}
      - name: Install it
        run: |
            install.packages('${{ env.BUILD_LOC }}/abn.tar.gz', repos=NULL, type="source")
        shell: Rscript {0}

      - name: Install urlchecker
        run: |
            install.packages("urlchecker")
        shell: Rscript {0}
      - name: Check all urls for permanent redirects
        run: |
            library(urlchecker)
            sink("urlchecker.out")
            print(url_check("./"))
            sink()
        shell: Rscript {0}
      - name: Show urls with permanent redirects
        run: |
          echo ::group::Show testthat output
          find check -name 'urlchecker.out' -exec cat '{}' \; || true
          echo ::endgroup::
        shell: bash --noprofile --norc -e -o pipefail {0}

      - name: Testthat!
        run: |
            # since on a test failure devtools::test does not exit with
            # non-zero state we test explicitly for failed tests and exit
            # accordingly
            res=devtools::test(pkg='.', reporter='summary');df=as.data.frame(res);if(sum(df$failed) > 0 || any(df$error)) {q(status=1)}
        shell: Rscript {0}
