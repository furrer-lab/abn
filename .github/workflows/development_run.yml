# Workflow triggered when we have a new release candidate
# This action is adapted from https://github.com/t4d-gmbh/stubbed_versioning
name: Runs on non-release pull requests

on:
  push:
    branches-ignore:
      - "release-[0-9]+.[0-9]+.[0-9]+"


jobs:
  right-branch:
    if: github.ref != 'refs/heads/main'
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      OWNER: ${{ github.repository_owner }}
      REPO: ${{ github.event.repository.name }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # NOTE: This might be needed to assert that we get the full history
                          #       for the changelog.
      - name: Smoke test
        run: |
          echo "Hello there!"

  get-target-container:
    runs-on: ubuntu-22.04
    needs: right-branch
    outputs:
      CONTAINER: ${{ steps.container.outputs.container }}
    steps:
      - name: Get container
        id: container
        env:
          BRANCH: ${{ github.ref_name }}
        run: |
          if [[ $BRANCH == *"__"* ]]; then
            echo "container=${BRANCH##*__}" >> $GITHUB_OUTPUT
          else
            echo "container=debian/clang/devel" >> $GITHUB_OUTPUT
          fi

  get-changes:
    runs-on: ubuntu-latest
    outputs:
      run_all: ${{ steps.changed_files.outputs.changed_src }}
      run_specific: ${{ steps.changed_files.outputs.changed_r }}
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      OWNER: ${{ github.repository_owner }}
      REPO: ${{ github.event.repository.name }}
      EVENT: ${{ github.event.number }}  # This is either the issue or pr
    steps:
      - uses: actions/checkout@v4
      - name: Find changed files
        id: changed_files
        run: | 
          echo "gh pr view ${{ env.EVENT }} --json 'files' --jq '.[].[].path'
          echo "CHANGED_SRC=`echo $(gh pr view ${{ env.EVENT }} --json 'files'|jq --arg FOLDER 'src/' '.[].[] | select(.path | startswith($FOLDER)) | .path')`" >> $GITHUB_OUTPUT
          echo "CHANGED_R=`echo $(gh pr view ${{ env.EVENT }} --json 'files'|jq --arg FOLDER 'R/' '.[].[] | select(.path | startswith($FOLDER)) | .path')`" >> $GITHUB_OUTPUT
          cat $GITHUB_OUTPUT

  gather_tests:
    needs:
      - get-changes
    runs-on: ubuntu-latest
    outputs:
      testfiles: ${{ steps.get_testfiles.outputs.testfiles }}
    steps:
      - uses: actions/checkout@v4
      # TODO: use all if CHANGED_SRC is not empty
      # TODO: map the test file names with the list of CHANGED_R otherwise
      - id: get_testfiles
        run: |
           echo "TESTFILES=$(ls tests/testthat/test-*.R | jq -R -s -c 'split("\n")[:-1]'))" >> $GITHUB_OUTPUT

  build-install-test:
    if: ${{ github.event_name != 'pull_request' && !startsWith(github.event.head_commit.message, 'noT') }}
    needs:
      - gather-tests
      - get-target-container
    runs-on: ubuntu-22.04
    # name: Testing ${{ matrix.os }} (${{ matrix.compiler}}-${{ matrix.r-version }})
    name: Testing in  ${{ needs.get-target-container.outputs.CONTAINER }}
    # runs-on: ubuntu-latest
    container:
      image: ${{ vars.CONTAINER_SOURCE }}/${{ needs.get-target-container.outputs.CONTAINER }}/abn:${{ vars.CONTAINER_VERSION || 'latest' }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    strategy:
      fail-fast: false
      matrix:
        testfile: ${{ fromJson(needs.gather_tests.outputs.testfiles) }}
    env:
      R_KEEP_PKG_SOURCE: yes  # NOTE Jo: not sure why this is here?
    steps:
      - uses: actions/checkout@v4
      - name: Create build location
        run: |
            mkdir ${{ env.BUILD_LOC }}
        shell: bash
      - name: Disable renv
        run: |
            renv::deactivate()
        shell: Rscript {0}
      - name: Change permissions of configure
        run: |
            chmod +x configure
        shell: bash
      - name: Install package dependencies
        run: |
            devtools::install_deps(pkg = '.', dependencies = TRUE, upgrade='never')
        shell: Rscript {0}
      - name: Build the package
        run: |
            devtools::build(pkg = '.', path = '${{ env.BUILD_LOC }}/abn.tar.gz')
        shell: Rscript {0}
      - name: Install it
        run: |
            install.packages('${{ env.BUILD_LOC }}/abn.tar.gz', repos=NULL, type="source")
        shell: Rscript {0}
      - name: Testthat!
        run: |
            # since on a test failure devtools::test does not exit with
            # non-zero state we test explicitly for failed tests and exit
            # accordingly
            res=devtools::test_active_file("${{ matrix.testfile }}");df=as.data.frame(res);if(sum(df$failed) > 0 || any(df$error)) {q("no", status=1, FALSE)}
        shell: Rscript {0}
